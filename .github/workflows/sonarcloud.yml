name: Vercel Production Deployment

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  NODE_VERSION: "20"
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  PRODUCTION_DEPLOYMENT_URL: "https://pokejut.vercel.app/"

permissions:
  contents: read
  issues: write

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.4

      - name: Set up Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache npm dependencies
        uses: actions/cache@v4.0.2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Run tests with coverage
        run: npm run cover
      - name: Upload coverage to build
        uses: actions/upload-artifact@v4.3.3
        with:
          name: coverage
          path: coverage/lcov.info
  sonar:
    needs: build
    runs-on: ubuntu-latest
    outputs:
      quality_gate_passed: ${{ steps.quality_gate.outputs.quality_gate_passed  }}
    steps:
      - name: Reuse checked-out code from previous job
        uses: actions/cache@v4.0.2
        with:
          path: .
      - name: download coverage
        uses: actions/download-artifact@v4.1.7
        with:
          name: coverage
          path: coverage/lcov.info
      - name: Run SonarQube analysis
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.projectKey=Stradivary_pokejut 
            -Dsonar.organization=stradivary 
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info 
            -Dsonar.source=src 
      - name: Check SonarQube Quality Gate Status
        id: quality_gate
        run: |
          URL="https://sonarcloud.io/api/qualitygates/project_status?projectKey=Stradivary_pokejut"
          TOKEN="${{ env.SONAR_TOKEN }}"
          STATUS="NONE"
          while [ "$STATUS" != "OK" ] && [ "$STATUS" != "ERROR" ]; do
            RESPONSE=$(curl -u $TOKEN: "$URL")
            STATUS=$(echo $RESPONSE | jq -r '.projectStatus.status')
            if [ "$STATUS" == "NONE" ]; then
              echo "Quality Gate status is pending..."
              sleep 10
            elif [ "$STATUS" == "ERROR" ]; then
              echo "Quality Gate failed."
              echo "quality_gate_passed=false" >> $GITHUB_OUTPUT
              exit 0
            fi
          done
          echo "Quality Gate passed."
          echo "quality_gate_passed=true" >> $GITHUB_OUTPUT
        env:
          SONAR_TOKEN: ${{ env.SONAR_TOKEN }}

  deploy_vercel:
    needs: sonar
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.4

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ env.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ env.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        if: success() && needs.sonar.outputs.quality_gate_passed == 'true'
        run: vercel deploy --prebuilt --prod --token=${{ env.VERCEL_TOKEN }} > deployment-url.txt

      - name: Extract Deployment URL
        if: success()
        id: extract-url
        run: |
          echo "deployment-url=$(tail -1 deployment-url.txt)" >> $GITHUB_OUTPUT

  zap_scan:
    needs: deploy_vercel
    runs-on: ubuntu-latest
    steps:
      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          target: ${{ env.PRODUCTION_DEPLOYMENT_URL }}
